basePath: /api/v1
definitions:
  errcode.Error:
    type: object
  model.Article:
    properties:
      content:
        type: string
      cover_image_url:
        type: string
      created_at:
        type: integer
      created_by:
        type: string
      deleted_at:
        type: integer
      desc:
        type: string
      id:
        type: integer
      is_del:
        type: integer
      modified_at:
        type: integer
      modified_by:
        type: string
      state:
        type: integer
      title:
        type: string
    type: object
  model.Tag:
    properties:
      created_at:
        type: integer
      created_by:
        type: string
      deleted_at:
        type: integer
      id:
        type: integer
      is_del:
        type: integer
      modified_at:
        type: integer
      modified_by:
        type: string
      name:
        type: string
      state:
        type: integer
    type: object
host: https://blog-service-poiyyort.cloud.okteto.net
info:
  contact:
    name: Elchn
  description: This is a simple blog service based on golang,mariadb and okteto
  title: blog service
  version: v0.0
paths:
  /api/v1/articles:
    get:
      parameters:
      - description: article name
        in: query
        maxLength: 100
        name: name
        type: string
      - default: 1
        description: state
        in: query
        name: state
        type: integer
      - description: page index
        in: query
        name: page
        type: integer
      - description: size per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: succeeded
          schema:
            $ref: '#/definitions/model.Article'
        "400":
          description: request errors
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: internal errors
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: get a list of articles
    post:
      parameters:
      - description: Article title
        in: body
        maxLength: 100
        minLength: 3
        name: title
        required: true
        schema:
          type: string
      - description: Article description
        in: body
        maxLength: 255
        name: desc
        required: true
        schema:
          type: string
      - description: Article content
        in: body
        name: content
        required: true
        schema:
          type: string
      - description: Article cover image url
        in: body
        maxLength: 255
        name: cover_image_url
        required: true
        schema:
          type: string
      - default: 1
        description: state
        in: body
        name: state
        schema:
          type: integer
      - description: creator
        in: body
        maxLength: 100
        minLength: 3
        name: created_by
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: succeeded
          schema:
            $ref: '#/definitions/model.Article'
        "400":
          description: request errors
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: internal errors
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: create a new article
  /api/v1/articles/{id}:
    delete:
      parameters:
      - description: article id
        in: path
        name: id
        required: true
        type: integer
      - description: article name
        in: query
        maxLength: 100
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: succeeded
          schema:
            $ref: '#/definitions/model.Article'
        "400":
          description: request errors
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: internal errors
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: delete an article with given title or id
    get:
      parameters:
      - description: article id
        in: path
        name: id
        required: true
        type: integer
      - description: article name
        in: query
        maxLength: 100
        name: name
        type: string
      - default: 1
        description: state
        in: query
        name: state
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: succeeded
          schema:
            $ref: '#/definitions/model.Article'
        "400":
          description: request errors
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: internal errors
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: get an article with its title or id
    put:
      parameters:
      - description: article id
        in: path
        name: id
        required: true
        type: integer
      - description: Article title
        in: body
        maxLength: 100
        minLength: 3
        name: title
        schema:
          type: string
      - description: Article description
        in: body
        maxLength: 255
        name: desc
        schema:
          type: string
      - description: Article content
        in: body
        name: content
        schema:
          type: string
      - description: Article cover image url
        in: body
        maxLength: 255
        name: cover_image_url
        schema:
          type: string
      - default: 1
        description: state
        in: body
        name: state
        schema:
          type: integer
      - description: creator
        in: body
        maxLength: 100
        minLength: 3
        name: created_by
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: succeeded
          schema:
            $ref: '#/definitions/model.Article'
        "400":
          description: request errors
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: internal errors
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: update an article
  /api/v1/tags:
    get:
      parameters:
      - description: tag name
        in: query
        maxLength: 100
        name: name
        type: string
      - default: 1
        description: state
        in: query
        name: state
        type: integer
      - description: page index
        in: query
        name: page
        type: integer
      - description: size per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: succeeded
          schema:
            $ref: '#/definitions/model.Tag'
        "400":
          description: request errors
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: internal errors
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: get a list of tags
    post:
      parameters:
      - description: tag name
        in: body
        maxLength: 100
        name: name
        required: true
        schema:
          type: string
      - default: 1
        description: state
        in: body
        name: state
        schema:
          type: integer
      - description: creator
        in: body
        maxLength: 100
        minLength: 3
        name: created_by
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: succeeded
          schema:
            $ref: '#/definitions/model.Tag'
        "400":
          description: request errors
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: internal errors
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: create a new tag
  /api/v1/tags/{id}:
    delete:
      parameters:
      - description: tag id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: succeeded
          schema:
            $ref: '#/definitions/model.Tag'
        "400":
          description: request errors
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: internal errors
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: delete a tag
    put:
      parameters:
      - description: tag id
        in: path
        name: id
        required: true
        type: string
      - description: tag name
        in: body
        maxLength: 100
        minLength: 3
        name: name
        schema:
          type: string
      - default: 1
        description: state
        in: query
        name: state
        type: integer
      - description: modifier
        in: body
        maxLength: 100
        minLength: 3
        name: modified_by
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: succeeded
          schema:
            $ref: '#/definitions/model.Tag'
        "400":
          description: request errors
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: internal errors
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: update a tag
swagger: "2.0"
